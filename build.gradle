buildscript {
    ext.kotlin_version = '1.3.31'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins {
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'java'
    id "com.moowork.node" version "1.3.1"
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'kotlin'

group = 'at.ezylot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

repositories {
    mavenCentral()

    flatDir {
        dirs 'lib'
    }
}

dependencies {
    implementation('org.springframework.boot:spring-boot-devtools')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-security')
    
    implementation(files('lib/at.jku.iic.droplet.electric.simulator.jar'))

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

tasks.processResources {
    dependsOn("tsRun")
}

tasks.register("tsInstall") {
    dependsOn("npm_install")
}

task tsRun(type:Exec) {
    dependsOn("tsInstall")

    if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")) {
        commandLine "node_modules/.bin/tsc.cmd"
    } else {
        commandLine "node_modules/.bin/tsc"
    }
}
